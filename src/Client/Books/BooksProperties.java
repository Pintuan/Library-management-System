/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Client.Books;

import Main.*;
import java.sql.*;
import java.time.LocalDate;
import javax.swing.*;

/**
 *
 * @author AlmarDave
 */
public class BooksProperties extends javax.swing.JFrame {
    
    int x,y;
    String AccID,BookID;
    Generator g = new Generator();
    Loader l = new Loader();

    /**
     * Creates new form BooksProperties
     */
    public BooksProperties() {
        initComponents();
    }
    public BooksProperties(String Title,String AccID) {
        this.AccID = AccID;
        initComponents();
        fillData(Title);
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTop = new javax.swing.JLabel();
        lblClose = new javax.swing.JLabel();
        lblCover = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnBorrow = new javax.swing.JButton();
        lblBookName = new javax.swing.JLabel();
        lblAuth = new javax.swing.JLabel();
        lblPub = new javax.swing.JLabel();
        lblDatePub = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblBookCount = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtGen = new javax.swing.JTextArea();

        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(400, 550));
        setType(java.awt.Window.Type.UTILITY);

        lblTop.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                lblTopMouseDragged(evt);
            }
        });
        lblTop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblTopMousePressed(evt);
            }
        });

        lblClose.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblClose.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblClose.setText("X");
        lblClose.setToolTipText("Close");
        lblClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCloseMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblCloseMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblCloseMouseExited(evt);
            }
        });

        lblCover.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCover.setText("Book's Cover Picture");
        lblCover.setToolTipText("Cover of the Book");
        lblCover.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel1.setText("Book Name");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel2.setText("Author");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel3.setText("Publisher");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel4.setText("Date Published");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel5.setText("Genre(s)");

        btnBorrow.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnBorrow.setText("Borrow This Book");
        btnBorrow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrowActionPerformed(evt);
            }
        });

        lblBookName.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblBookName.setText("Book Name");

        lblAuth.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblAuth.setText("Author");

        lblPub.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblPub.setText("Publisher");

        lblDatePub.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblDatePub.setText("Date Published");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel6.setText("Available in the Library");

        lblBookCount.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblBookCount.setText("0");

        txtGen.setColumns(20);
        txtGen.setRows(5);
        txtGen.setEnabled(false);
        jScrollPane1.setViewportView(txtGen);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(lblTop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblClose, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addComponent(lblCover, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addComponent(btnBorrow)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblAuth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblBookName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblPub, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblDatePub, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(lblBookCount, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblClose, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTop, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCover, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblBookName)
                        .addGap(18, 18, 18)
                        .addComponent(lblAuth)
                        .addGap(18, 18, 18)
                        .addComponent(lblPub)
                        .addGap(18, 18, 18)
                        .addComponent(lblDatePub)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(lblBookCount))
                .addGap(62, 62, 62)
                .addComponent(btnBorrow)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblTopMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblTopMouseDragged
        // TODO add your handling code here:
        this.setLocation(evt.getXOnScreen() - x, evt.getYOnScreen() - y);
    }//GEN-LAST:event_lblTopMouseDragged

    private void lblTopMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblTopMousePressed
        // TODO add your handling code here:
        x = evt.getX();
        y = evt.getY();
    }//GEN-LAST:event_lblTopMousePressed

    private void lblCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCloseMouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_lblCloseMouseClicked

    private void lblCloseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCloseMouseEntered
        // TODO add your handling code here:
        lblClose.setForeground(java.awt.Color.red);
    }//GEN-LAST:event_lblCloseMouseEntered

    private void lblCloseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCloseMouseExited
        // TODO add your handling code here:
        lblClose.setForeground(lblCover.getForeground());
    }//GEN-LAST:event_lblCloseMouseExited

    private void btnBorrowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrowActionPerformed
        try {
            Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=DB_LMS;integratedSecurity=true","DESKTOP-VTJ87TV\\AlmarDave","");
            PreparedStatement s = con.prepareStatement("INSERT INTO BOOKS VALUES("+g.getBorrowID()+"," //generate borrow ID
                    +AccID+"," //fetch the user ID
                            +BookID+"," //fetch the book ID
                                    +Date.valueOf(LocalDate.now())+","//gets the date today
                                            +g.getReturnDate()+"," // due date of the borrower
                                                    +g.getReturnKey()+"," //returning code that will be inputted once the borrower returns the book
                                                            + "'Borrowed'," //status of the book default 
                                                                + "'20')"); //everytime some one borrows a book he will have a default 20 pesos balance to be paid after returning plus the ammount of 
            s.execute();
            JOptionPane.showMessageDialog(null, "Great! you've borrowed the Book!\nkeep in mind to return the book \nwithin 3 - day period to avoid penalty! Thank you!", "Completed", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error: " +ex.getErrorCode()+"\n"+ex.getLocalizedMessage(), "Warning!", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnBorrowActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBorrow;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAuth;
    private javax.swing.JLabel lblBookCount;
    private javax.swing.JLabel lblBookName;
    private javax.swing.JLabel lblClose;
    private javax.swing.JLabel lblCover;
    private javax.swing.JLabel lblDatePub;
    private javax.swing.JLabel lblPub;
    private javax.swing.JLabel lblTop;
    private javax.swing.JTextArea txtGen;
    // End of variables declaration//GEN-END:variables
    void fillData(String Title)
    {
        String query = "SELECT * FROM BOOK WHERE BookID = '"+Title+"' AND BookStat = 'Available'";
        try {
            Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=DB_LMS;integratedSecurity=true","DESKTOP-VTJ87TV\\AlmarDave","");
            PreparedStatement s = con.prepareStatement(query);
            ResultSet rs = s.executeQuery();
            if (rs.next()) {
                //fetching values from the database according to their use
                lblBookName.setText(rs.getString("BookTitle"));
                lblDatePub.setText(rs.getString("PubDate"));
                lblAuth.setText(l.getAuthor(rs.getString("AuthID")));
                lblPub.setText(l.getPublisher(rs.getString("PubID")));
                txtGen.setText(rs.getString("Genre"));
                lblBookCount.setText(String.valueOf(l.getCount(lblBookName.getText())));
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error: " + ex.getErrorCode() + "\n" + ex.getLocalizedMessage(), "Warning!", JOptionPane.WARNING_MESSAGE);
        }
    }
}
